# Name of the application
spring.application.name=demo

# ✅ Use the container hostname if running inside Docker (not 'localhost')
# Default to a Docker-friendly hostname, but allow override
spring.datasource.url=${DB_URL}

# ✅ Ensure these match your Docker PostgreSQL environment variables
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# PostgreSQL dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JDBC driver
spring.datasource.driver-class-name=org.postgresql.Driver

# ✅ Recommended to use 'none' or 'update' for dev
spring.jpa.hibernate.ddl-auto=update

# ✅ Optional SQL init (if you're using schema.sql or data.sql)
spring.datasource.initialization-mode=always
spring.sql.init.continue-on-error=true
spring.sql.init.platform=postgres

# ✅ Mail config (make sure this works)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=edex357@gmail.com
spring.mail.password=gzxv ccqd qeru dhqm
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


# ✅ Desactiva todas las métricas (opcional)
management.metrics.binders.enabled=false

# ✅ Desactiva específicamente las métricas del procesador (NECESARIO para evitar el error en contenedores)
management.metrics.binders.processor.enabled=false



